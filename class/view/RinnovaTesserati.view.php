<?phpif (!defined("_BASE_DIR_"))    exit();include_class('Sesso');include_model('Polizza');include_controller('RinnovaTesserati');include_formview('FormView');include_view('WaitingView', 'QualificaView');class RinnovaTesserati extends ViewWithForm{    const FASE_TESS_1 = 1;    const FASE_TESS_2 = 2;    const FASE_TESS_3 = 3;    const FASE_TESS_4 = 4;    const FASE_TESS_5 = 5;    const FASE_TESS_6 = 6;    private $ctrl;    private $pulsanti;    /**     * @var WaitingView     */    private $wait;    /**     * @var QualificaView[]     */    private $qualview;    private $callback;    private $idsoc;    public function stampaJsOnload()    {        echo "rinnovaOnLoad();\n";    }    public function getJsInclude()    {        return array('rinnova_tess');    }    public function getCssInclude()    {        return array('rinnova_tess');    }    /**     * @param int $idsoc     * @param bool $rinnovo [def:false] true per considerare solo i tipi rinnovati      * @param callable $callback [opz] funzione da chiamare in caso di operazione effettuata correttamente     * @param boolean $pulsanti [def:true] true per stampare i pulsanti e chiudere il form     * @param int $fase la fase del rinnovo dei tesserati, ora vengono divisi per iniziale del cognome     */    public function __construct($idsoc, $rinnovo = false, $callback = NULL, $pulsanti = true, $fase = NULL, $callback_ctrl)    {        $this->ctrl = new RinnovaTesseratiCtrl($idsoc, $rinnovo, $callback_ctrl, $fase);        if ($pulsanti)            $this->ctrl->getForm()->addSubmit('Salva');        $this->form = new FormView($this->ctrl->getForm());        $this->callback = $callback;        $this->pulsanti = $pulsanti;        $this->wait = new WaitingView(array($this, 'stampaInner'));        $this->idsoc = $idsoc;        foreach ($this->ctrl->getSettori() as $idsett => $sett)        {            $tipi_sett = $this->ctrl->getTipi($idsett);            foreach ($tipi_sett as $idtipo => $tipo)            {                $this->qualview[$idtipo] = QualificaViewUtil::get()->getView($idtipo, FormRinnovo::GRADO, $this->form);            }        }    }    public function getSubview()    {        return array_merge(array($this->form, $this->wait), $this->qualview);    }    private function stampaRigaTess($key, $val, $span, $offset = 0)    {        echo "<div class=\"$key span$span";        if ($offset > 0)            echo " offset$offset";        echo "\">$val</div>";    }    /**     *      * @param integer $idtess     * @param Tipo $tipo     * @param FormView $fv     */    private function stampaRigaTipo($idtess, $tipo, $fv)    {        $idtipo = $tipo->getId();        $ka = array($idtess, $idtipo);        $ntipo = $tipo->getNome();        echo "<div class=\"row tipo$idtipo tipo\">";        echo '<div class="span3"><label class="checkbox">';        $fv->stampa(FormRinnovo::TIPO, $ka, array(            'class' => 'chk_tipo',            'data-tess' => $idtess,            'data-tipo' => $idtipo        ));        echo " $ntipo</label></div><div class=\"span7\" id=\"grado_{$idtess}_{$idtipo}\">";        $qv = $this->qualview[$idtipo];        $qv->stampa($idtess);        echo '<div class="span8">';        $this->stampaPolAssicurativa($idtess); // tecnici        echo '</div>';        echo '<div class="span8">';        $this->stampPolStipulate($idtess); // tecnici        echo '</div>';        echo '<div class="span9">';        $this->stampaPolRichiesta($idtess);        echo '</div>';        $err = $this->ctrl->getErrore(FormRinnovo::GRADO, $ka);        if ($err !== NULL)            echo "<span class=\"text-error msg-errore\">$err</span>";        echo "</div></div>\n";    }    private function checkedPolizza($id_polizza, $id_tesserato)    {        $polizza = new Polizza('polizze_stipulate');        $array_dati_polizza = array("id_polizza" => $id_polizza, "idtesserato" => $id_tesserato, "idsocieta" => $this->idsoc, "data_stipula" => date("d-m-Y"), "data_da" => NULL, "data_a" => NULL, "tipo_polizza" => "4");        $polizza->setDati($array_dati_polizza);        $num_rows = $polizza->SearchRow();        if ($num_rows > 0)        {            return true;        }        $polizza->unsetDati($array_dati_polizza);        return false;    }    public function stampPolStipulate($id_tesserato = 0)    {        $obj_polizza = Polizza::elenco();        $polizza = new Polizza('polizze_stipulate');        $array_dati_polizza = array("id_polizza" => 4, "idtesserato" => $id_tesserato, "idsocieta" => $this->idSoc, "tipo_polizza" => "4");        $polizza->setDati($array_dati_polizza);        $array_dati_polizza = $polizza->getPolizza(1);        $flag_scad = false;        $data_scadenza_integrativa = "";        if (!empty($array_dati_polizza))        {            $polizza->setDati($array_dati_polizza);            $scaduto_integrativa = $polizza->polizzaScaduto();            $pol_integrativa = $obj_polizza[4]->getNomePolizza();            $data_scadenza_integrativa = $array_dati_polizza['data_a'];            $flag_scad = true;            $polizza->unsetDati($array_dati_polizza);        }        $array_dati_polizza = array("id_polizza" => 5, "idtesserato" => $id_tesserato, "idsocieta" => $this->idSoc, "tipo_polizza" => "4");        $polizza->setDati($array_dati_polizza);        $array_dati_polizza = $polizza->getPolizza(1);        $data_scadenza_resp_civile = "";        if (!empty($array_dati_polizza))        {            $polizza->setDati($array_dati_polizza);            $scaduto_resp_civile = $polizza->polizzaScaduto();            $pol_resp_civile = $obj_polizza[5]->getNomePolizza();            $data_scadenza_resp_civile = $array_dati_polizza['data_a'];            $flag_scad = true;            $polizza->unsetDati($array_dati_polizza);        }                                $array_dati_polizza = array("id_polizza" => 6, "idtesserato" => $id_tesserato, "idsocieta" => $this->idSoc, "tipo_polizza" => "4");        $polizza->setDati($array_dati_polizza);        $array_dati_polizza = $polizza->getPolizza(1);        $data_scadenza_tecnici = "";        if (!empty($array_dati_polizza))        {            $polizza->setDati($array_dati_polizza);            $scaduto_tecnici = $polizza->polizzaScaduto();            $pol_tecnici = $obj_polizza[6]->getNomePolizza();            $data_scadenza_tecnici = $array_dati_polizza['data_a'];            $flag_scad = true;            $polizza->unsetDati($array_dati_polizza);        }                if ($flag_scad)        {            print '<label><strong>Polizze assicurative in vigore </strong></label>';            if (!$scaduto_integrativa) // è scaduta            {                if (!empty($pol_integrativa))                    print '<label>' . $pol_integrativa . " (<strong>Scadenza:</strong> $data_scadenza_integrativa) " . '</label>';            }            if (!$scaduto_resp_civile) // è scaduta            {                if (!empty($pol_resp_civile))                    print '<label>' . $pol_resp_civile . " (<strong>Scadenza:</strong> $data_scadenza_resp_civile) " . '</label>';            }                        if (!$scaduto_tecnici) // è scaduta            {                if (!empty($pol_tecnici))                    print '<label>' . $pol_tecnici . " (<strong>Scadenza:</strong> $data_scadenza_tecnici) " . '</label>';            }                    }    }    public function stampaPolRichiesta($id_tesserato = 0)    {        $obj_polizza = Polizza::elenco();        $flag_richiesta = false;        $pol_integrativa = "";        $pol_integrativa_esiste = $this->checkedPolizza(4, $id_tesserato);        if ($pol_integrativa_esiste)        {            $pol_integrativa = $obj_polizza[4]->getNomePolizza();            $flag_richiesta = true;        }        $pol_resp_civile = "";        $pol_resp_civile_esiste = $this->checkedPolizza(5, $id_tesserato);        if ($pol_resp_civile_esiste)        {            $pol_resp_civile = $obj_polizza[5]->getNomePolizza();            $flag_richiesta = true;        }        $pol_tecnici = "";        $pol_tecnici_esiste = $this->checkedPolizza(6, $id_tesserato);        if ($pol_tecnici_esiste)        {            $pol_tecnici = $obj_polizza[6]->getNomePolizza();            $flag_richiesta = true;        }        if ($flag_richiesta)        {            print '<label><strong>Richieste</strong></label>';            if (!empty($pol_integrativa))                print '<label>' . $pol_integrativa . '</label>';            if (!empty($pol_resp_civile))                print '<label>' . $pol_resp_civile . '</label>';            if (!empty($pol_tecnici))                print '<label>' . $pol_tecnici . '</label>';        }    }    public function stampaPolAssicurativa($id_tesserato = 0)    {        $obj_polizza = Polizza::elenco();        print '<label><strong>Polizza assicurativa</strong></label>';        $nome_polizza = $obj_polizza[4]->getNomePolizza();        $nome_polizza = $nome_polizza . " <strong>(Atleti)</strong>";        $esiste_row = $this->checkedPolizza(4, $id_tesserato);        $checked = "";        if ($esiste_row)        {            //  $checked = " checked ";        }        print '  <div class="controls"> <input type="checkbox" ' . $checked . '  name="polizze_assicurative_tess[' . $id_tesserato . '][0]" value="4"/> ' . $nome_polizza . ' </div>';        $nome_polizza = $obj_polizza[5]->getNomePolizza();        $nome_polizza = $nome_polizza . " <strong>(Ufficiali di gara)</strong>";        $esiste_row = $this->checkedPolizza(5, $id_tesserato);        $checked = "";        if ($esiste_row)        {            //    $checked = " checked ";        }        print '  <div class="controls"> <input type="checkbox" ' . $checked . '  name="polizze_assicurative_tess[' . $id_tesserato . '][1]" value="5"/> ' . $nome_polizza . ' </div>';        $nome_polizza = $obj_polizza[6]->getNomePolizza();        $nome_polizza = $nome_polizza . " <strong>(Tecnici)</strong>";        $esiste_row = $this->checkedPolizza(6, $id_tesserato);        $checked = "";        if ($esiste_row)        {            // $checked = " checked ";        }        print '  <div class="controls"> <input type="checkbox" ' . $checked . '  name="polizze_assicurative_tess[' . $id_tesserato . '][2]" value="6"/> ' . $nome_polizza . ' </div>';    }    public function stampa()    {        if ($this->pulsanti)//PAGINA ALTRI TESSERATI        {            echo '<ul class="breadcrumb">';            $fasi = array(                self::FASE_TESS_1 => 'Tesserati A-B',                self::FASE_TESS_2 => 'Tesserati C-D',                self::FASE_TESS_3 => 'Tesserati E-I',                self::FASE_TESS_4 => 'Tesserati J-M',                self::FASE_TESS_5 => 'Tesserati N-R',                self::FASE_TESS_6 => 'Tesserati S-Z',            );            foreach ($fasi as $fase => $nome)            {                echo '<li>';                $attuale = ($fase == $this->ctrl->getFase());                if ($attuale)                    echo '<strong>';                $url = _PATH_ROOT_ . call_user_func($this->callback, $fase);                if (!$attuale)                    echo "<a href=\"$url\">";                echo $nome;                if (!$attuale)                    echo '</a>';                if ($attuale)                    echo '</strong>';                if ($fase != self::FASE_TESS_6)                    echo ' <span class="divider"><i class="icon-chevron-right"></i></span>';                echo "</li>\n";            }            echo "</ul>\n\n";        }        $this->wait->stampa();    }    public function stampaInner()    {        $ltess = $this->ctrl->getTesserati();        $fv = $this->form;        $fv->stampaInizioForm();        if (count($ltess) == 0)            echo "<h4>Nessun tesserato</h4>";        else        {            $col['nome'] = array('v' => 'Nominativo', 's' => 7);            $col['sesso'] = array('v' => 'Sesso', 's' => 1);            $col['nascita'] = array('v' => 'Data di nascita', 's' => 3);            echo '<div class="row intestazione">';            $offset = 1;            foreach ($col as $key => $val)            {                $this->stampaRigaTess($key, "<strong>{$val['v']}</strong>", $val['s'], $offset);                $offset = 0;            }            echo '</div>';            foreach ($ltess as $idtess => $tess)//per ogni tesserato            {                /* @var $tess Tesserato */                $lta = array();                $ltna = array();                $dati = array();                $dati['nome'] = $tess->getCognome() . ' ' . $tess->getNome();                $dati['sesso'] = Sesso::toStringBreve($tess->getSesso());                $dati['nascita'] = $tess->getDataNascita()->format('d/m/Y');                $check_name = 'form_' . FormRinnovo::RINNOVA . FormElem::keyToString($idtess);                $err = $this->ctrl->getErrore(FormRinnovo::RINNOVA, $idtess);                if ($err !== NULL)                    $dati['nome'] .= " <span class=\"label label-important pull-right\">$err</span>";                echo "\n" . '<div class="row tesserato';                if ($this->ctrl->isTesseratoErrato($idtess))                    echo ' errato';                echo '"><div class="check-tess span1">';                $fv->stampa(FormRinnovo::RINNOVA, $idtess, array('onclick' => "toggleTipiBox($idtess, this)"));                echo "</div>";                foreach ($dati as $key => $val)                    $this->stampaRigaTess($key, "<label for=\"$check_name\">$val</label>", $col[$key]['s']);                echo "</div>\n";                echo '<div class="row"><div class="offset1 span11">';                echo "<div id=\"box-tess-$idtess\" class=\"box-tipi ";                if (!$this->form->getElem(FormRinnovo::RINNOVA, $idtess)->getFormElem()->getDefault())                    echo ' nascondi ';                $ls = $this->ctrl->getSettori();                if (count($ls) == 0)                {                    echo ' alert">Questa società non ha nessun settore sportivo associato';                } else                {                    echo ' well well-small">';                    foreach ($ls as $idsett => $sett)                    {                        echo '<h4>' . $sett->getNome() . "</h4>\n";                        foreach ($this->ctrl->getTipi($idsett) as $tipo)                            $this->stampaRigaTipo($idtess, $tipo, $fv);                    }                }                echo "</div></div></div>\n";            }        }        if ($this->pulsanti)        {            echo '<div class="form-actions text-right">';            $fv->stampaSubmit(array('class' => 'btn-primary'));            echo "</div>\n";            $fv->stampaFineForm();        }    }}